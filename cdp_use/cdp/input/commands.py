# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP Input Domain Commands"""

from typing import List, Union
from typing_extensions import TypedDict, NotRequired

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from .types import DragData
    from .types import GestureSourceType
    from .types import MouseButton
    from .types import TimeSinceEpoch
    from .types import TouchPoint

class DispatchDragEventParameters(TypedDict):
    type: "str"
    x: "float"
    y: "float"
    data: "DragData"
    modifiers: "NotRequired[int]"





class DispatchKeyEventParameters(TypedDict):
    type: "str"
    modifiers: "NotRequired[int]"
    timestamp: "NotRequired[TimeSinceEpoch]"
    text: "NotRequired[str]"
    unmodifiedText: "NotRequired[str]"
    keyIdentifier: "NotRequired[str]"
    code: "NotRequired[str]"
    key: "NotRequired[str]"
    windowsVirtualKeyCode: "NotRequired[int]"
    nativeVirtualKeyCode: "NotRequired[int]"
    autoRepeat: "NotRequired[bool]"
    isKeypad: "NotRequired[bool]"
    isSystemKey: "NotRequired[bool]"
    location: "NotRequired[int]"
    commands: "NotRequired[List[str]]"





class InsertTextParameters(TypedDict):
    text: "str"





class ImeSetCompositionParameters(TypedDict):
    text: "str"
    selectionStart: "int"
    selectionEnd: "int"
    replacementStart: "NotRequired[int]"
    replacementEnd: "NotRequired[int]"





class DispatchMouseEventParameters(TypedDict):
    type: "str"
    x: "float"
    y: "float"
    modifiers: "NotRequired[int]"
    timestamp: "NotRequired[TimeSinceEpoch]"
    button: "NotRequired[Union[MouseButton, str]]"
    buttons: "NotRequired[int]"
    clickCount: "NotRequired[int]"
    force: "NotRequired[float]"
    tangentialPressure: "NotRequired[float]"
    tiltX: "NotRequired[float]"
    tiltY: "NotRequired[float]"
    twist: "NotRequired[int]"
    deltaX: "NotRequired[float]"
    deltaY: "NotRequired[float]"
    pointerType: "NotRequired[str]"





class DispatchTouchEventParameters(TypedDict):
    type: "str"
    touchPoints: "List[TouchPoint]"
    modifiers: "NotRequired[int]"
    timestamp: "NotRequired[TimeSinceEpoch]"





class EmulateTouchFromMouseEventParameters(TypedDict):
    type: "str"
    x: "int"
    y: "int"
    button: "Union[MouseButton, str]"
    timestamp: "NotRequired[TimeSinceEpoch]"
    deltaX: "NotRequired[float]"
    deltaY: "NotRequired[float]"
    modifiers: "NotRequired[int]"
    clickCount: "NotRequired[int]"





class SetIgnoreInputEventsParameters(TypedDict):
    ignore: "bool"





class SetInterceptDragsParameters(TypedDict):
    enabled: "bool"





class SynthesizePinchGestureParameters(TypedDict):
    x: "float"
    y: "float"
    scaleFactor: "float"
    relativeSpeed: "NotRequired[int]"
    gestureSourceType: "NotRequired[Union[GestureSourceType, str]]"





class SynthesizeScrollGestureParameters(TypedDict):
    x: "float"
    y: "float"
    xDistance: "NotRequired[float]"
    yDistance: "NotRequired[float]"
    xOverscroll: "NotRequired[float]"
    yOverscroll: "NotRequired[float]"
    preventFling: "NotRequired[bool]"
    speed: "NotRequired[int]"
    gestureSourceType: "NotRequired[Union[GestureSourceType, str]]"
    repeatCount: "NotRequired[int]"
    repeatDelayMs: "NotRequired[int]"
    interactionMarkerName: "NotRequired[str]"





class SynthesizeTapGestureParameters(TypedDict):
    x: "float"
    y: "float"
    duration: "NotRequired[int]"
    tapCount: "NotRequired[int]"
    gestureSourceType: "NotRequired[Union[GestureSourceType, str]]"


