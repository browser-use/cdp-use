# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP Autofill Domain Types"""

from enum import Enum
from pydantic import BaseModel
from typing import List, Union

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ..dom.types import BackendNodeId
    from ..page.types import FrameId

class CreditCard(BaseModel):
    number: "str"
    name: "str"
    expiryMonth: "str"
    expiryYear: "str"
    cvc: "str"



class AddressField(BaseModel):
    name: "str"
    value: "str"



class AddressFields(BaseModel):
    """A list of address fields."""
    fields: "List[AddressField]"



class Address(BaseModel):
    fields: "List[AddressField]"



class AddressUI(BaseModel):
    """Defines how an address can be displayed like in chrome://settings/addresses.
Address UI is a two dimensional array, each inner array is an \"address information line\", and when rendered in a UI surface should be displayed as such.
The following address UI for instance:
[[{name: \"GIVE_NAME\", value: \"Jon\"}, {name: \"FAMILY_NAME\", value: \"Doe\"}], [{name: \"CITY\", value: \"Munich\"}, {name: \"ZIP\", value: \"81456\"}]]
should allow the receiver to render:
Jon Doe
Munich 81456"""
    addressFields: "List[AddressFields]"



class FillingStrategy(Enum):
    """Specified whether a filled field was done so by using the html autocomplete attribute or autofill heuristics."""
    AUTOCOMPLETEATTRIBUTE = "autocompleteAttribute"
    AUTOFILLINFERRED = "autofillInferred"



class FilledField(BaseModel):
    htmlType: "str"
    id: "str"
    name: "str"
    value: "str"
    autofillType: "str"
    fillingStrategy: "Union[FillingStrategy, str]"
    frameId: "FrameId"
    fieldId: "BackendNodeId"


# Rebuild Pydantic models to resolve forward references
# Import dependencies for model rebuilding
def _rebuild_models_when_ready():
    try:
        from ..dom.types import BackendNodeId
        from ..page.types import FrameId
        # Rebuild models now that imports are available
        CreditCard.model_rebuild()
        AddressField.model_rebuild()
        AddressFields.model_rebuild()
        Address.model_rebuild()
        AddressUI.model_rebuild()
        FilledField.model_rebuild()
    except ImportError:
        pass  # Will be rebuilt later

_rebuild_models_when_ready()
