# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP Profiler Domain Types"""

from pydantic import BaseModel
from typing import List, Optional

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ..runtime.types import CallFrame
    from ..runtime.types import ScriptId

class ProfileNode(BaseModel):
    """Profile node. Holds callsite information, execution statistics and child nodes."""
    id: "int"
    callFrame: "CallFrame"
    hitCount: "Optional[int]" = None
    children: "Optional[List[int]]" = None
    deoptReason: "Optional[str]" = None
    positionTicks: "Optional[List[PositionTickInfo]]" = None



class Profile(BaseModel):
    """Profile."""
    nodes: "List[ProfileNode]"
    startTime: "float"
    endTime: "float"
    samples: "Optional[List[int]]" = None
    timeDeltas: "Optional[List[int]]" = None



class PositionTickInfo(BaseModel):
    """Specifies a number of samples attributed to a certain source position."""
    line: "int"
    ticks: "int"



class CoverageRange(BaseModel):
    """Coverage data for a source range."""
    startOffset: "int"
    endOffset: "int"
    count: "int"



class FunctionCoverage(BaseModel):
    """Coverage data for a JavaScript function."""
    functionName: "str"
    ranges: "List[CoverageRange]"
    isBlockCoverage: "bool"



class ScriptCoverage(BaseModel):
    """Coverage data for a JavaScript script."""
    scriptId: "ScriptId"
    url: "str"
    functions: "List[FunctionCoverage]"


# Rebuild Pydantic models to resolve forward references
# Import dependencies for model rebuilding
def _rebuild_models_when_ready():
    try:
        from ..runtime.types import CallFrame
        from ..runtime.types import ScriptId
        # Rebuild models now that imports are available
        ProfileNode.model_rebuild()
        Profile.model_rebuild()
        PositionTickInfo.model_rebuild()
        CoverageRange.model_rebuild()
        FunctionCoverage.model_rebuild()
        ScriptCoverage.model_rebuild()
    except ImportError:
        pass  # Will be rebuilt later

_rebuild_models_when_ready()
