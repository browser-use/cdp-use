# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP Profiler Domain Commands"""

from pydantic import BaseModel
from typing import List
from typing_extensions import TypedDict

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from .types import Profile
    from .types import ScriptCoverage

class GetBestEffortCoverageReturns(BaseModel):
    result: "List[ScriptCoverage]"



class SetSamplingIntervalParameters(TypedDict):
    interval: "int"
    """New sampling interval in microseconds."""





class StartPreciseCoverageParameters(TypedDict, total=False):
    callCount: "bool"
    """Collect accurate call counts beyond simple 'covered' or 'not covered'."""
    detailed: "bool"
    """Collect block-based coverage."""
    allowTriggeredUpdates: "bool"
    """Allow the backend to send updates on its own initiative"""


class StartPreciseCoverageReturns(BaseModel):
    timestamp: "float"



class StopReturns(BaseModel):
    profile: "Profile"



class TakePreciseCoverageReturns(BaseModel):
    result: "List[ScriptCoverage]"
    timestamp: "float"


# Rebuild Pydantic models to resolve forward references
def _rebuild_models_when_ready():
    try:
        from .types import Profile
        from .types import ScriptCoverage
        # Rebuild models now that imports are available
        GetBestEffortCoverageReturns.model_rebuild()
        StartPreciseCoverageReturns.model_rebuild()
        StopReturns.model_rebuild()
        TakePreciseCoverageReturns.model_rebuild()
    except ImportError:
        pass  # Will be rebuilt later

_rebuild_models_when_ready()
