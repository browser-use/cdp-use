# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP Profiler Domain Events"""

from pydantic import BaseModel
from typing import List, Optional

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ..debugger.types import Location
    from .types import Profile
    from .types import ScriptCoverage

class ConsoleProfileFinishedEvent(BaseModel):
    id: "str"
    location: "Location"
    profile: "Profile"
    title: "Optional[str]" = None



class ConsoleProfileStartedEvent(BaseModel):
    """Sent when new profile recording is started using console.profile() call."""
    id: "str"
    location: "Location"
    title: "Optional[str]" = None



class PreciseCoverageDeltaUpdateEvent(BaseModel):
    """Reports coverage delta since the last poll (either from an event like this, or from
`takePreciseCoverage` for the current isolate. May only be sent if precise code
coverage has been started. This event can be trigged by the embedder to, for example,
trigger collection of coverage data immediately at a certain point in time."""
    timestamp: "float"
    occasion: "str"
    result: "List[ScriptCoverage]"


# Rebuild Pydantic models to resolve forward references
def _rebuild_models_when_ready():
    try:
        from ..debugger.types import Location
        from .types import Profile
        from .types import ScriptCoverage
        # Rebuild models now that imports are available
        ConsoleProfileFinishedEvent.model_rebuild()
        ConsoleProfileStartedEvent.model_rebuild()
        PreciseCoverageDeltaUpdateEvent.model_rebuild()
    except ImportError:
        pass  # Will be rebuilt later

_rebuild_models_when_ready()
