# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP DOMSnapshot Domain Commands"""

from pydantic import BaseModel
from typing import List
from typing_extensions import TypedDict, NotRequired

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from .types import ComputedStyle
    from .types import DOMNode
    from .types import DocumentSnapshot
    from .types import LayoutTreeNode

class GetSnapshotParameters(TypedDict):
    computedStyleWhitelist: "List[str]"
    includeEventListeners: "NotRequired[bool]"
    includePaintOrder: "NotRequired[bool]"
    includeUserAgentShadowTree: "NotRequired[bool]"


class GetSnapshotReturns(BaseModel):
    domNodes: "List[DOMNode]"
    layoutTreeNodes: "List[LayoutTreeNode]"
    computedStyles: "List[ComputedStyle]"



class CaptureSnapshotParameters(TypedDict):
    computedStyles: "List[str]"
    includePaintOrder: "NotRequired[bool]"
    includeDOMRects: "NotRequired[bool]"
    includeBlendedBackgroundColors: "NotRequired[bool]"
    includeTextColorOpacities: "NotRequired[bool]"


class CaptureSnapshotReturns(BaseModel):
    documents: "List[DocumentSnapshot]"
    strings: "List[str]"


# Rebuild Pydantic models to resolve forward references
def _rebuild_models_when_ready():
    try:
        from .types import ComputedStyle
        from .types import DOMNode
        from .types import DocumentSnapshot
        from .types import LayoutTreeNode
        # Rebuild models now that imports are available
        GetSnapshotReturns.model_rebuild()
        CaptureSnapshotReturns.model_rebuild()
    except ImportError:
        pass  # Will be rebuilt later

_rebuild_models_when_ready()
