# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP BluetoothEmulation Domain Types"""

from enum import Enum
from pydantic import BaseModel
from typing import List, Optional

class CentralState(Enum):
    """Indicates the various states of Central."""
    ABSENT = "absent"
    POWERED_OFF = "powered-off"
    POWERED_ON = "powered-on"



class GATTOperationType(Enum):
    """Indicates the various types of GATT event."""
    CONNECTION = "connection"
    DISCOVERY = "discovery"



class CharacteristicWriteType(Enum):
    """Indicates the various types of characteristic write."""
    WRITE_DEFAULT_DEPRECATED = "write-default-deprecated"
    WRITE_WITH_RESPONSE = "write-with-response"
    WRITE_WITHOUT_RESPONSE = "write-without-response"



class CharacteristicOperationType(Enum):
    """Indicates the various types of characteristic operation."""
    READ = "read"
    WRITE = "write"
    SUBSCRIBE_TO_NOTIFICATIONS = "subscribe-to-notifications"
    UNSUBSCRIBE_FROM_NOTIFICATIONS = "unsubscribe-from-notifications"



class DescriptorOperationType(Enum):
    """Indicates the various types of descriptor operation."""
    READ = "read"
    WRITE = "write"



class ManufacturerData(BaseModel):
    """Stores the manufacturer data"""
    key: "int"
    data: "str"



class ScanRecord(BaseModel):
    """Stores the byte data of the advertisement packet sent by a Bluetooth device."""
    name: "Optional[str]" = None
    uuids: "Optional[List[str]]" = None
    appearance: "Optional[int]" = None
    txPower: "Optional[int]" = None
    manufacturerData: "Optional[List[ManufacturerData]]" = None



class ScanEntry(BaseModel):
    """Stores the advertisement packet information that is sent by a Bluetooth device."""
    deviceAddress: "str"
    rssi: "int"
    scanRecord: "ScanRecord"



class CharacteristicProperties(BaseModel):
    """Describes the properties of a characteristic. This follows Bluetooth Core
Specification BT 4.2 Vol 3 Part G 3.3.1. Characteristic Properties."""
    broadcast: "Optional[bool]" = None
    read: "Optional[bool]" = None
    writeWithoutResponse: "Optional[bool]" = None
    write: "Optional[bool]" = None
    notify: "Optional[bool]" = None
    indicate: "Optional[bool]" = None
    authenticatedSignedWrites: "Optional[bool]" = None
    extendedProperties: "Optional[bool]" = None


# Rebuild Pydantic models to resolve forward references
# Import dependencies for model rebuilding
def _rebuild_models_when_ready():
    try:
        # Rebuild models now that imports are available
        ManufacturerData.model_rebuild()
        ScanRecord.model_rebuild()
        ScanEntry.model_rebuild()
        CharacteristicProperties.model_rebuild()
    except ImportError:
        pass  # Will be rebuilt later

_rebuild_models_when_ready()
