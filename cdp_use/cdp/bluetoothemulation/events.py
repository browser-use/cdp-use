# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP BluetoothEmulation Domain Events"""

from pydantic import BaseModel
from typing import Optional

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from .types import CharacteristicOperationType
    from .types import CharacteristicWriteType
    from .types import DescriptorOperationType
    from .types import GATTOperationType

class GattOperationReceivedEvent(BaseModel):
    """Event for when a GATT operation of |type| to the peripheral with |address|
happened."""
    address: "str"
    type: "GATTOperationType"



class CharacteristicOperationReceivedEvent(BaseModel):
    """Event for when a characteristic operation of |type| to the characteristic
respresented by |characteristicId| happened. |data| and |writeType| is
expected to exist when |type| is write."""
    characteristicId: "str"
    type: "CharacteristicOperationType"
    data: "Optional[str]" = None
    writeType: "Optional[CharacteristicWriteType]" = None



class DescriptorOperationReceivedEvent(BaseModel):
    """Event for when a descriptor operation of |type| to the descriptor
respresented by |descriptorId| happened. |data| is expected to exist when
|type| is write."""
    descriptorId: "str"
    type: "DescriptorOperationType"
    data: "Optional[str]" = None


# Rebuild Pydantic models to resolve forward references
def _rebuild_models_when_ready():
    try:
        from .types import CharacteristicOperationType
        from .types import CharacteristicWriteType
        from .types import DescriptorOperationType
        from .types import GATTOperationType
        # Rebuild models now that imports are available
        GattOperationReceivedEvent.model_rebuild()
        CharacteristicOperationReceivedEvent.model_rebuild()
        DescriptorOperationReceivedEvent.model_rebuild()
    except ImportError:
        pass  # Will be rebuilt later

_rebuild_models_when_ready()
