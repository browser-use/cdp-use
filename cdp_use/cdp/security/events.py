# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP Security Domain Events"""

from pydantic import BaseModel
from typing import List, Optional

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from .types import InsecureContentStatus
    from .types import SecurityState
    from .types import SecurityStateExplanation
    from .types import VisibleSecurityState

class CertificateErrorEvent(BaseModel):
    """There is a certificate error. If overriding certificate errors is enabled, then it should be
handled with the `handleCertificateError` command. Note: this event does not fire if the
certificate error has been allowed internally. Only one client per target should override
certificate errors at the same time."""
    eventId: "int"
    errorType: "str"
    requestURL: "str"



class VisibleSecurityStateChangedEvent(BaseModel):
    """The security state of the page changed."""
    visibleSecurityState: "VisibleSecurityState"



class SecurityStateChangedEvent(BaseModel):
    """The security state of the page changed. No longer being sent."""
    securityState: "SecurityState"
    schemeIsCryptographic: "bool"
    explanations: "List[SecurityStateExplanation]"
    insecureContentStatus: "InsecureContentStatus"
    summary: "Optional[str]" = None


# Rebuild Pydantic models to resolve forward references
def _rebuild_models_when_ready():
    try:
        from .types import InsecureContentStatus
        from .types import SecurityState
        from .types import SecurityStateExplanation
        from .types import VisibleSecurityState
        # Rebuild models now that imports are available
        CertificateErrorEvent.model_rebuild()
        VisibleSecurityStateChangedEvent.model_rebuild()
        SecurityStateChangedEvent.model_rebuild()
    except ImportError:
        pass  # Will be rebuilt later

_rebuild_models_when_ready()
