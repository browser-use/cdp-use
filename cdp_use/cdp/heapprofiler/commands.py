# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP HeapProfiler Domain Commands"""

from pydantic import BaseModel
from typing_extensions import TypedDict, NotRequired

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ..runtime.types import RemoteObject
    from ..runtime.types import RemoteObjectId
    from .types import HeapSnapshotObjectId
    from .types import SamplingHeapProfile

class AddInspectedHeapObjectParameters(TypedDict):
    heapObjectId: "HeapSnapshotObjectId"





class GetHeapObjectIdParameters(TypedDict):
    objectId: "RemoteObjectId"


class GetHeapObjectIdReturns(BaseModel):
    heapSnapshotObjectId: "HeapSnapshotObjectId"



class GetObjectByHeapObjectIdParameters(TypedDict):
    objectId: "HeapSnapshotObjectId"
    objectGroup: "NotRequired[str]"


class GetObjectByHeapObjectIdReturns(BaseModel):
    result: "RemoteObject"



class GetSamplingProfileReturns(BaseModel):
    profile: "SamplingHeapProfile"



class StartSamplingParameters(TypedDict, total=False):
    samplingInterval: "float"
    includeObjectsCollectedByMajorGC: "bool"
    includeObjectsCollectedByMinorGC: "bool"





class StartTrackingHeapObjectsParameters(TypedDict, total=False):
    trackAllocations: "bool"





class StopSamplingReturns(BaseModel):
    profile: "SamplingHeapProfile"



class StopTrackingHeapObjectsParameters(TypedDict, total=False):
    reportProgress: "bool"
    treatGlobalObjectsAsRoots: "bool"
    captureNumericValue: "bool"
    exposeInternals: "bool"





class TakeHeapSnapshotParameters(TypedDict, total=False):
    reportProgress: "bool"
    treatGlobalObjectsAsRoots: "bool"
    captureNumericValue: "bool"
    exposeInternals: "bool"




# Rebuild Pydantic models to resolve forward references
def _rebuild_models_when_ready():
    try:
        from ..runtime.types import RemoteObject
        from ..runtime.types import RemoteObjectId
        from .types import HeapSnapshotObjectId
        from .types import SamplingHeapProfile
        # Rebuild models now that imports are available
        GetHeapObjectIdReturns.model_rebuild()
        GetObjectByHeapObjectIdReturns.model_rebuild()
        GetSamplingProfileReturns.model_rebuild()
        StopSamplingReturns.model_rebuild()
    except ImportError:
        pass  # Will be rebuilt later

_rebuild_models_when_ready()
