# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP HeapProfiler Domain Types"""

from pydantic import BaseModel
from typing import List

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ..runtime.types import CallFrame

"""Heap snapshot object id."""
HeapSnapshotObjectId = str



class SamplingHeapProfileNode(BaseModel):
    """Sampling Heap Profile node. Holds callsite information, allocation statistics and child nodes."""
    callFrame: "CallFrame"
    selfSize: "float"
    id: "int"
    children: "List[SamplingHeapProfileNode]"



class SamplingHeapProfileSample(BaseModel):
    """A single sample from a sampling profile."""
    size: "float"
    nodeId: "int"
    ordinal: "float"



class SamplingHeapProfile(BaseModel):
    """Sampling profile."""
    head: "SamplingHeapProfileNode"
    samples: "List[SamplingHeapProfileSample]"


# Rebuild Pydantic models to resolve forward references
# Import dependencies for model rebuilding
def _rebuild_models_when_ready():
    try:
        from ..runtime.types import CallFrame
        # Rebuild models now that imports are available
        SamplingHeapProfileNode.model_rebuild()
        SamplingHeapProfileSample.model_rebuild()
        SamplingHeapProfile.model_rebuild()
    except ImportError:
        pass  # Will be rebuilt later

_rebuild_models_when_ready()
