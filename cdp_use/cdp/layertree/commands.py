# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP LayerTree Domain Commands"""

from pydantic import BaseModel
from typing import Any, Dict, List
from typing_extensions import TypedDict, NotRequired

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ..dom.types import Rect
    from .types import LayerId
    from .types import PaintProfile
    from .types import PictureTile
    from .types import SnapshotId

class CompositingReasonsParameters(TypedDict):
    layerId: "LayerId"


class CompositingReasonsReturns(BaseModel):
    compositingReasons: "List[str]"
    compositingReasonIds: "List[str]"



class LoadSnapshotParameters(TypedDict):
    tiles: "List[PictureTile]"


class LoadSnapshotReturns(BaseModel):
    snapshotId: "SnapshotId"



class MakeSnapshotParameters(TypedDict):
    layerId: "LayerId"


class MakeSnapshotReturns(BaseModel):
    snapshotId: "SnapshotId"



class ProfileSnapshotParameters(TypedDict):
    snapshotId: "SnapshotId"
    minRepeatCount: "NotRequired[int]"
    minDuration: "NotRequired[float]"
    clipRect: "NotRequired[Rect]"


class ProfileSnapshotReturns(BaseModel):
    timings: "List[PaintProfile]"



class ReleaseSnapshotParameters(TypedDict):
    snapshotId: "SnapshotId"





class ReplaySnapshotParameters(TypedDict):
    snapshotId: "SnapshotId"
    fromStep: "NotRequired[int]"
    toStep: "NotRequired[int]"
    scale: "NotRequired[float]"


class ReplaySnapshotReturns(BaseModel):
    dataURL: "str"



class SnapshotCommandLogParameters(TypedDict):
    snapshotId: "SnapshotId"


class SnapshotCommandLogReturns(BaseModel):
    commandLog: "List[Dict[str, Any]]"


# Rebuild Pydantic models to resolve forward references
def _rebuild_models_when_ready():
    try:
        from ..dom.types import Rect
        from .types import LayerId
        from .types import PaintProfile
        from .types import PictureTile
        from .types import SnapshotId
        # Rebuild models now that imports are available
        CompositingReasonsReturns.model_rebuild()
        LoadSnapshotReturns.model_rebuild()
        MakeSnapshotReturns.model_rebuild()
        ProfileSnapshotReturns.model_rebuild()
        ReplaySnapshotReturns.model_rebuild()
        SnapshotCommandLogReturns.model_rebuild()
    except ImportError:
        pass  # Will be rebuilt later

_rebuild_models_when_ready()
