# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP DOMDebugger Domain Commands"""

from pydantic import BaseModel
from typing import List, Union
from typing_extensions import TypedDict, NotRequired

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ..dom.types import NodeId
    from ..runtime.types import RemoteObjectId
    from .types import CSPViolationType
    from .types import DOMBreakpointType
    from .types import EventListener

class GetEventListenersParameters(TypedDict):
    objectId: "RemoteObjectId"
    depth: "NotRequired[int]"
    pierce: "NotRequired[bool]"


class GetEventListenersReturns(BaseModel):
    listeners: "List[EventListener]"



class RemoveDOMBreakpointParameters(TypedDict):
    nodeId: "NodeId"
    type: "Union[DOMBreakpointType, str]"





class RemoveEventListenerBreakpointParameters(TypedDict):
    eventName: "str"
    targetName: "NotRequired[str]"





class RemoveInstrumentationBreakpointParameters(TypedDict):
    eventName: "str"





class RemoveXHRBreakpointParameters(TypedDict):
    url: "str"





class SetBreakOnCSPViolationParameters(TypedDict):
    violationTypes: "List[Union[CSPViolationType, str]]"





class SetDOMBreakpointParameters(TypedDict):
    nodeId: "NodeId"
    type: "Union[DOMBreakpointType, str]"





class SetEventListenerBreakpointParameters(TypedDict):
    eventName: "str"
    targetName: "NotRequired[str]"





class SetInstrumentationBreakpointParameters(TypedDict):
    eventName: "str"





class SetXHRBreakpointParameters(TypedDict):
    url: "str"




# Rebuild Pydantic models to resolve forward references
def _rebuild_models_when_ready():
    try:
        from ..dom.types import NodeId
        from ..runtime.types import RemoteObjectId
        from .types import CSPViolationType
        from .types import DOMBreakpointType
        from .types import EventListener
        # Rebuild models now that imports are available
        GetEventListenersReturns.model_rebuild()
    except ImportError:
        pass  # Will be rebuilt later

_rebuild_models_when_ready()
