# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP PerformanceTimeline Domain Types"""

from pydantic import BaseModel
from typing import List, Optional

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ..dom.types import BackendNodeId
    from ..dom.types import Rect
    from ..network.types import TimeSinceEpoch
    from ..page.types import FrameId

class LargestContentfulPaint(BaseModel):
    """See https://github.com/WICG/LargestContentfulPaint and largest_contentful_paint.idl"""
    renderTime: "TimeSinceEpoch"
    loadTime: "TimeSinceEpoch"
    size: "float"
    elementId: "Optional[str]" = None
    url: "Optional[str]" = None
    nodeId: "Optional[BackendNodeId]" = None



class LayoutShiftAttribution(BaseModel):
    previousRect: "Rect"
    currentRect: "Rect"
    nodeId: "Optional[BackendNodeId]" = None



class LayoutShift(BaseModel):
    """See https://wicg.github.io/layout-instability/#sec-layout-shift and layout_shift.idl"""
    value: "float"
    hadRecentInput: "bool"
    lastInputTime: "TimeSinceEpoch"
    sources: "List[LayoutShiftAttribution]"



class TimelineEvent(BaseModel):
    frameId: "FrameId"
    type: "str"
    name: "str"
    time: "TimeSinceEpoch"
    duration: "Optional[float]" = None
    lcpDetails: "Optional[LargestContentfulPaint]" = None
    layoutShiftDetails: "Optional[LayoutShift]" = None


# Rebuild Pydantic models to resolve forward references
# Import dependencies for model rebuilding
def _rebuild_models_when_ready():
    try:
        from ..dom.types import BackendNodeId
        from ..dom.types import Rect
        from ..network.types import TimeSinceEpoch
        from ..page.types import FrameId
        # Rebuild models now that imports are available
        LargestContentfulPaint.model_rebuild()
        LayoutShiftAttribution.model_rebuild()
        LayoutShift.model_rebuild()
        TimelineEvent.model_rebuild()
    except ImportError:
        pass  # Will be rebuilt later

_rebuild_models_when_ready()
