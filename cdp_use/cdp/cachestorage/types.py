# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP CacheStorage Domain Types"""

from enum import Enum
from pydantic import BaseModel
from typing import List, Optional

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ..storage.types import StorageBucket

"""Unique identifier of the Cache object."""
CacheId = str



class CachedResponseType(Enum):
    """type of HTTP response cached"""
    BASIC = "basic"
    CORS = "cors"
    DEFAULT = "default"
    ERROR = "error"
    OPAQUERESPONSE = "opaqueResponse"
    OPAQUEREDIRECT = "opaqueRedirect"



class DataEntry(BaseModel):
    """Data entry."""
    requestURL: "str"
    requestMethod: "str"
    requestHeaders: "List[Header]"
    responseTime: "float"
    responseStatus: "int"
    responseStatusText: "str"
    responseType: "CachedResponseType"
    responseHeaders: "List[Header]"



class Cache(BaseModel):
    """Cache identifier."""
    cacheId: "CacheId"
    securityOrigin: "str"
    storageKey: "str"
    cacheName: "str"
    storageBucket: "Optional[StorageBucket]" = None



class Header(BaseModel):
    name: "str"
    value: "str"



class CachedResponse(BaseModel):
    """Cached response"""
    body: "str"


# Rebuild Pydantic models to resolve forward references
# Import dependencies for model rebuilding
def _rebuild_models_when_ready():
    try:
        from ..storage.types import StorageBucket
        # Rebuild models now that imports are available
        DataEntry.model_rebuild()
        Cache.model_rebuild()
        Header.model_rebuild()
        CachedResponse.model_rebuild()
    except ImportError:
        pass  # Will be rebuilt later

_rebuild_models_when_ready()
