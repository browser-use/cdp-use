# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP Animation Domain Types"""

from pydantic import BaseModel
from typing import List, Optional, Union

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ..dom.types import BackendNodeId
    from ..dom.types import ScrollOrientation

class Animation(BaseModel):
    """Animation instance."""
    id: "str"
    name: "str"
    pausedState: "bool"
    playState: "str"
    playbackRate: "float"
    startTime: "float"
    currentTime: "float"
    type: "str"
    source: "Optional[AnimationEffect]" = None
    cssId: "Optional[str]" = None
    viewOrScrollTimeline: "Optional[ViewOrScrollTimeline]" = None



class ViewOrScrollTimeline(BaseModel):
    """Timeline instance"""
    axis: "Union[ScrollOrientation, str]"
    sourceNodeId: "Optional[BackendNodeId]" = None
    startOffset: "Optional[float]" = None
    endOffset: "Optional[float]" = None
    subjectNodeId: "Optional[BackendNodeId]" = None



class AnimationEffect(BaseModel):
    """AnimationEffect instance"""
    delay: "float"
    endDelay: "float"
    iterationStart: "float"
    iterations: "float"
    duration: "float"
    direction: "str"
    fill: "str"
    easing: "str"
    backendNodeId: "Optional[BackendNodeId]" = None
    keyframesRule: "Optional[KeyframesRule]" = None



class KeyframesRule(BaseModel):
    """Keyframes Rule"""
    keyframes: "List[KeyframeStyle]"
    name: "Optional[str]" = None



class KeyframeStyle(BaseModel):
    """Keyframe Style"""
    offset: "str"
    easing: "str"


# Rebuild Pydantic models to resolve forward references
# Import dependencies for model rebuilding
def _rebuild_models_when_ready():
    try:
        from ..dom.types import BackendNodeId
        from ..dom.types import ScrollOrientation
        # Rebuild models now that imports are available
        Animation.model_rebuild()
        ViewOrScrollTimeline.model_rebuild()
        AnimationEffect.model_rebuild()
        KeyframesRule.model_rebuild()
        KeyframeStyle.model_rebuild()
    except ImportError:
        pass  # Will be rebuilt later

_rebuild_models_when_ready()
