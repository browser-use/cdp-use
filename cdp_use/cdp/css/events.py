# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP CSS Domain Events"""

from pydantic import BaseModel
from typing import Optional

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ..dom.types import NodeId
    from .types import CSSStyleSheetHeader
    from .types import FontFace
    from .types import StyleSheetId

class FontsUpdatedEvent(BaseModel):
    """Fires whenever a web font is updated.  A non-empty font parameter indicates a successfully loaded
web font."""
    font: "Optional[FontFace]" = None



class MediaQueryResultChangedEvent(BaseModel):
    """Fires whenever a MediaQuery result changes (for example, after a browser window has been
resized.) The current implementation considers only viewport-dependent media features."""
    pass



class StyleSheetAddedEvent(BaseModel):
    """Fired whenever an active document stylesheet is added."""
    header: "CSSStyleSheetHeader"



class StyleSheetChangedEvent(BaseModel):
    """Fired whenever a stylesheet is changed as a result of the client operation."""
    styleSheetId: "StyleSheetId"



class StyleSheetRemovedEvent(BaseModel):
    """Fired whenever an active document stylesheet is removed."""
    styleSheetId: "StyleSheetId"



class ComputedStyleUpdatedEvent(BaseModel):
    nodeId: "NodeId"


# Rebuild Pydantic models to resolve forward references
def _rebuild_models_when_ready():
    try:
        from ..dom.types import NodeId
        from .types import CSSStyleSheetHeader
        from .types import FontFace
        from .types import StyleSheetId
        # Rebuild models now that imports are available
        FontsUpdatedEvent.model_rebuild()
        MediaQueryResultChangedEvent.model_rebuild()
        StyleSheetAddedEvent.model_rebuild()
        StyleSheetChangedEvent.model_rebuild()
        StyleSheetRemovedEvent.model_rebuild()
        ComputedStyleUpdatedEvent.model_rebuild()
    except ImportError:
        pass  # Will be rebuilt later

_rebuild_models_when_ready()
