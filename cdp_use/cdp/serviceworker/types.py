# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP ServiceWorker Domain Types"""

from enum import Enum
from pydantic import BaseModel
from typing import List, Optional, Union

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ..target.types import TargetID

RegistrationID = str



class ServiceWorkerRegistration(BaseModel):
    """ServiceWorker registration."""
    registrationId: "RegistrationID"
    scopeURL: "str"
    isDeleted: "bool"



class ServiceWorkerVersionRunningStatus(Enum):
    STOPPED = "stopped"
    STARTING = "starting"
    RUNNING = "running"
    STOPPING = "stopping"



class ServiceWorkerVersionStatus(Enum):
    NEW = "new"
    INSTALLING = "installing"
    INSTALLED = "installed"
    ACTIVATING = "activating"
    ACTIVATED = "activated"
    REDUNDANT = "redundant"



class ServiceWorkerVersion(BaseModel):
    """ServiceWorker version."""
    versionId: "str"
    registrationId: "RegistrationID"
    scriptURL: "str"
    runningStatus: "Union[ServiceWorkerVersionRunningStatus, str]"
    status: "Union[ServiceWorkerVersionStatus, str]"
    scriptLastModified: "Optional[float]" = None
    scriptResponseTime: "Optional[float]" = None
    controlledClients: "Optional[List[TargetID]]" = None
    targetId: "Optional[TargetID]" = None
    routerRules: "Optional[str]" = None



class ServiceWorkerErrorMessage(BaseModel):
    """ServiceWorker error message."""
    errorMessage: "str"
    registrationId: "RegistrationID"
    versionId: "str"
    sourceURL: "str"
    lineNumber: "int"
    columnNumber: "int"


# Rebuild Pydantic models to resolve forward references
# Import dependencies for model rebuilding
def _rebuild_models_when_ready():
    try:
        from ..target.types import TargetID
        # Rebuild models now that imports are available
        ServiceWorkerRegistration.model_rebuild()
        ServiceWorkerVersion.model_rebuild()
        ServiceWorkerErrorMessage.model_rebuild()
    except ImportError:
        pass  # Will be rebuilt later

_rebuild_models_when_ready()
