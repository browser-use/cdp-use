# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP BackgroundService Domain Types"""

from enum import Enum
from pydantic import BaseModel
from typing import List, Union

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ..network.types import TimeSinceEpoch
    from ..serviceworker.types import RegistrationID

class ServiceName(Enum):
    """The Background Service that will be associated with the commands/events.
Every Background Service operates independently, but they share the same
API."""
    BACKGROUNDFETCH = "backgroundFetch"
    BACKGROUNDSYNC = "backgroundSync"
    PUSHMESSAGING = "pushMessaging"
    NOTIFICATIONS = "notifications"
    PAYMENTHANDLER = "paymentHandler"
    PERIODICBACKGROUNDSYNC = "periodicBackgroundSync"



class EventMetadata(BaseModel):
    """A key-value pair for additional event information to pass along."""
    key: "str"
    value: "str"



class BackgroundServiceEvent(BaseModel):
    timestamp: "TimeSinceEpoch"
    origin: "str"
    serviceWorkerRegistrationId: "RegistrationID"
    service: "Union[ServiceName, str]"
    eventName: "str"
    instanceId: "str"
    eventMetadata: "List[EventMetadata]"
    storageKey: "str"


# Rebuild Pydantic models to resolve forward references
# Import dependencies for model rebuilding
def _rebuild_models_when_ready():
    try:
        from ..network.types import TimeSinceEpoch
        from ..serviceworker.types import RegistrationID
        # Rebuild models now that imports are available
        EventMetadata.model_rebuild()
        BackgroundServiceEvent.model_rebuild()
    except ImportError:
        pass  # Will be rebuilt later

_rebuild_models_when_ready()
