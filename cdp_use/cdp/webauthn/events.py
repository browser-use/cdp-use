# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP WebAuthn Domain Events"""

from pydantic import BaseModel

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from .types import AuthenticatorId
    from .types import Credential

class CredentialAddedEvent(BaseModel):
    """Triggered when a credential is added to an authenticator."""
    authenticatorId: "AuthenticatorId"
    credential: "Credential"



class CredentialDeletedEvent(BaseModel):
    """Triggered when a credential is deleted, e.g. through
PublicKeyCredential.signalUnknownCredential()."""
    authenticatorId: "AuthenticatorId"
    credentialId: "str"



class CredentialUpdatedEvent(BaseModel):
    """Triggered when a credential is updated, e.g. through
PublicKeyCredential.signalCurrentUserDetails()."""
    authenticatorId: "AuthenticatorId"
    credential: "Credential"



class CredentialAssertedEvent(BaseModel):
    """Triggered when a credential is used in a webauthn assertion."""
    authenticatorId: "AuthenticatorId"
    credential: "Credential"


# Rebuild Pydantic models to resolve forward references
def _rebuild_models_when_ready():
    try:
        from .types import AuthenticatorId
        from .types import Credential
        # Rebuild models now that imports are available
        CredentialAddedEvent.model_rebuild()
        CredentialDeletedEvent.model_rebuild()
        CredentialUpdatedEvent.model_rebuild()
        CredentialAssertedEvent.model_rebuild()
    except ImportError:
        pass  # Will be rebuilt later

_rebuild_models_when_ready()
