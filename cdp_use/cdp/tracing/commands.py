# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP Tracing Domain Commands"""

from pydantic import BaseModel
from typing import List, Union
from typing_extensions import TypedDict

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from .types import MemoryDumpLevelOfDetail
    from .types import StreamCompression
    from .types import StreamFormat
    from .types import TraceConfig
    from .types import TracingBackend

class GetCategoriesReturns(BaseModel):
    categories: "List[str]"



class RecordClockSyncMarkerParameters(TypedDict):
    syncId: "str"





class RequestMemoryDumpParameters(TypedDict, total=False):
    deterministic: "bool"
    levelOfDetail: "Union[MemoryDumpLevelOfDetail, str]"


class RequestMemoryDumpReturns(BaseModel):
    dumpGuid: "str"
    success: "bool"



class StartParameters(TypedDict, total=False):
    categories: "str"
    options: "str"
    bufferUsageReportingInterval: "float"
    transferMode: "str"
    streamFormat: "Union[StreamFormat, str]"
    streamCompression: "Union[StreamCompression, str]"
    traceConfig: "TraceConfig"
    perfettoConfig: "str"
    tracingBackend: "Union[TracingBackend, str]"




# Rebuild Pydantic models to resolve forward references
def _rebuild_models_when_ready():
    try:
        from .types import MemoryDumpLevelOfDetail
        from .types import StreamCompression
        from .types import StreamFormat
        from .types import TraceConfig
        from .types import TracingBackend
        # Rebuild models now that imports are available
        GetCategoriesReturns.model_rebuild()
        RequestMemoryDumpReturns.model_rebuild()
    except ImportError:
        pass  # Will be rebuilt later

_rebuild_models_when_ready()
