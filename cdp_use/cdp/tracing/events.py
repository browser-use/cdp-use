# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP Tracing Domain Events"""

from pydantic import BaseModel
from typing import Any, Dict, List, Optional

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ..io.types import StreamHandle
    from .types import StreamCompression
    from .types import StreamFormat

class BufferUsageEvent(BaseModel):
    percentFull: "Optional[float]" = None
    eventCount: "Optional[float]" = None
    value: "Optional[float]" = None



class DataCollectedEvent(BaseModel):
    """Contains a bucket of collected trace events. When tracing is stopped collected events will be
sent as a sequence of dataCollected events followed by tracingComplete event."""
    value: "List[Dict[str, Any]]"



class TracingCompleteEvent(BaseModel):
    """Signals that tracing is stopped and there is no trace buffers pending flush, all data were
delivered via dataCollected events."""
    dataLossOccurred: "bool"
    stream: "Optional[StreamHandle]" = None
    traceFormat: "Optional[StreamFormat]" = None
    streamCompression: "Optional[StreamCompression]" = None


# Rebuild Pydantic models to resolve forward references
def _rebuild_models_when_ready():
    try:
        from ..io.types import StreamHandle
        from .types import StreamCompression
        from .types import StreamFormat
        # Rebuild models now that imports are available
        BufferUsageEvent.model_rebuild()
        DataCollectedEvent.model_rebuild()
        TracingCompleteEvent.model_rebuild()
    except ImportError:
        pass  # Will be rebuilt later

_rebuild_models_when_ready()
